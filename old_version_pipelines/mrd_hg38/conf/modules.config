/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> savefile(filename) }
    ]

    withLabel: R {
        container = { workflow.containerEngine == 'singularity' && !task.ext.singularity_pull_docker_container ?
        "${projectDir}/assets/R/R.sif" :
        'hub.geneco.vn/gs/oncogs_rscript:latest' }  
    }

    withLabel: no_publish {
        publishDir = [
            path: { "${params.outdir}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> savenull(filename) },
        ]
    }


    withName: BWA_MEM_PRE {
        publishDir = [
            path: { "${params.outdir}/bwa" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> savenull(filename) },
        ]
        ext.args = "-p"
        ext.prefix = { "${sampleid}.pre" }
    }

    withName: BWA_MEM_POST {
        publishDir = [
            path: { "${params.outdir}/bwa" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> savenull(filename) },
        ]
        ext.args = "-p"
        ext.prefix = { "${sampleid}.post" }
    }
    withName: PICARD_MERGEBAMALIGNMENT_PRE {
        publishDir = [
            path: { "${params.outdir}/picard" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> savenull(filename) },
        ]
        ext.prefix = { "${sampleid}.pre" }
    }
    withName: PICARD_MERGEBAMALIGNMENT_POST {
        publishDir = [
            path: { "${params.outdir}/picard" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> savenull(filename) },
        ]
        ext.prefix = { "${sampleid}.post" }
    }
    withName: PICARD_SAMTOFASTQ_PRE {
        publishDir = [
            path: { "${params.outdir}/picard" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> savenull(filename) },
        ]
        ext.prefix = { "${sampleid}.pre" }
    }
    
    withName: PICARD_SAMTOFASTQ_POST {
        publishDir = [
            path: { "${params.outdir}/picard" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> savenull(filename) },
        ]
        ext.prefix = { "${sampleid}.post" }
    }

    withName: MULTIQC {
        publishDir = [
            path: "${params.outdir}/report/multiqc",
            mode: params.publish_dir_mode,
            saveAs: { filename -> savefile(filename) }
        ]
    }
    withName: MULTIQC_BRIEF {
        publishDir = [
            path: "${params.outdir}/report",
            mode: params.publish_dir_mode,
            saveAs: { filename -> savefile(filename) }
        ]
        ext.args = '--ignore "*_clinvar_mpipeup_summary_by_gene.tsv"'
    }
    
    withName: HMMCOPY_READCOUNTER {
        publishDir = [
            path: "${params.outdir}/hmmcopy_readcounter",
            mode: params.publish_dir_mode
        ]
    ext.args = '--window 1000000 --quality 20 --chromosome "chr1,chr2,chr3,chr4,chr5,chr6,chr7,chr8,chr9,chr10,chr11,chr12,chr13,chr14,chr15,chr16,chr17,chr18,chr19,chr20,chr21,chr22,chrX,chrY" '
    }

    withName: ICHORCNA_RUN {
        publishDir = [
            path: "${params.outdir}/ichorCNA",
            mode: params.publish_dir_mode
        ]
    ext.args = { '--ploidy "c(2)" --normal "c(0.95, 0.99, 0.995, 0.999)" --maxCN 3 --includeHOMD False --estimateNormal True --estimatePloidy True --estimateScPrevalence False --scStates "c()" --txnE 0.9999 --txnStrength 10000 ' }
    }

    withName: "LB_WF:SAMTOOLS_SORT" {
        publishDir = [
            path: { "${params.outdir}/bam/before_UMI" },
            mode: params.publish_dir_mode,
        ]
    }
    

    withName: ".*:MAPPING_SWF:SAMTOOLS_SORT" {
        publishDir = [
            path: { "${params.outdir}/bam/after_UMI" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: "LB_WF:QC_MPILEUP_DEPTH_PRE:Summary_Mpileup" {
        publishDir = [
            path: { "${params.outdir}/summary/QC_before_UMI" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: "LB_WF:QC_MPILEUP_DEPTH_POST:Summary_Mpileup" {
        publishDir = [
            path: { "${params.outdir}/summary/QC_after_UMI" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: "LB_WF:QC_MPILEUP_DEPTH_PRE:Summary_Depth" {
        publishDir = [
            path: { "${params.outdir}/summary/QC_before_UMI" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: "LB_WF:QC_MPILEUP_DEPTH_POST:Summary_Depth" {
        publishDir = [
            path: { "${params.outdir}/summary/QC_after_UMI" },
            mode: params.publish_dir_mode,
        ]
    }

}